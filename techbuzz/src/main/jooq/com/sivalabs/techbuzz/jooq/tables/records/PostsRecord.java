/*
 * This file is generated by jOOQ.
 */
package com.sivalabs.techbuzz.jooq.tables.records;


import com.sivalabs.techbuzz.jooq.tables.Posts;
import com.sivalabs.techbuzz.jooq.tables.pojos.JooqPosts;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostsRecord extends UpdatableRecordImpl<PostsRecord> implements Record8<Long, String, String, String, Long, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.posts.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.posts.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.posts.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.posts.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.posts.url</code>.
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.posts.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.posts.content</code>.
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.posts.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.posts.created_by</code>.
     */
    public void setCreatedBy(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.posts.created_by</code>.
     */
    public Long getCreatedBy() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.posts.cat_id</code>.
     */
    public void setCatId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.posts.cat_id</code>.
     */
    public Long getCatId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.posts.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.posts.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.posts.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.posts.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, Long, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, Long, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Posts.POSTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Posts.POSTS.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Posts.POSTS.URL;
    }

    @Override
    public Field<String> field4() {
        return Posts.POSTS.CONTENT;
    }

    @Override
    public Field<Long> field5() {
        return Posts.POSTS.CREATED_BY;
    }

    @Override
    public Field<Long> field6() {
        return Posts.POSTS.CAT_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Posts.POSTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Posts.POSTS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getUrl();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public Long component5() {
        return getCreatedBy();
    }

    @Override
    public Long component6() {
        return getCatId();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getUrl();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public Long value5() {
        return getCreatedBy();
    }

    @Override
    public Long value6() {
        return getCatId();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public PostsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PostsRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public PostsRecord value3(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public PostsRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public PostsRecord value5(Long value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public PostsRecord value6(Long value) {
        setCatId(value);
        return this;
    }

    @Override
    public PostsRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PostsRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PostsRecord values(Long value1, String value2, String value3, String value4, Long value5, Long value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostsRecord
     */
    public PostsRecord() {
        super(Posts.POSTS);
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(Long id, String title, String url, String content, Long createdBy, Long catId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Posts.POSTS);

        setId(id);
        setTitle(title);
        setUrl(url);
        setContent(content);
        setCreatedBy(createdBy);
        setCatId(catId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(JooqPosts value) {
        super(Posts.POSTS);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setUrl(value.getUrl());
            setContent(value.getContent());
            setCreatedBy(value.getCreatedBy());
            setCatId(value.getCatId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
